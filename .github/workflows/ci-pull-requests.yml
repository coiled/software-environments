
name: Build conda environments

on:
  pull_request:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        software-env: ["default-py37", "default-py38", "default-py39", "default-py310"]
        server: ["https://cloud.coiled.io", "https://staging.coiledhq.com", "https://development.coiledhq.com"]
        include:
          - software-env: "default-py37"
            env-file: default/environment-py37.yml

          - software-env: "default-py38"
            env-file: default/environment-py38.yml

          - software-env: "default-py39"
            env-file: default/environment-py39.yml

          - software-env: "default-py310"
            env-file: default/environment-py310.yml

          - server: "https://cloud.coiled.io"
            token-name: CLOUD_TOKEN
            account: coiled-software-environments-bot

          - server: "https://staging.coiledhq.com"
            token-name: SANDBOX_TOKEN
            account: coiled-software-environments-bot

          - server: "https://development.coiledhq.com"
            token-name: DEV_TOKEN
            account: coiled-software-environments-bot

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      
      - name: Build local ${{ matrix.software-env }} conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: ${{ matrix.env-file }}

      - name: List conda packages
        shell: bash -l {0}
        run: conda list

      - name: Install Coiled
        shell: bash -l {0}
        run: python -m pip install coiled

      - name: Build ${{ matrix.software-env }} software environment
        env:
          DASK_COILED__SERVER: ${{ matrix.server }}
          DASK_COILED__TOKEN: ${{ secrets[matrix.token-name] }}
        shell: bash -l {0}
        run: coiled env create --name ${{ matrix.account }}/${{ matrix.software-env }} --conda ${{ matrix.env-file }}

      - name: Run quickstart
        env:
          DASK_COILED__SERVER: ${{ matrix.server }}
          DASK_COILED__TOKEN: ${{ secrets[matrix.token-name] }}
          SOFTWARE_ENV: ${{ matrix.account }}/${{ matrix.software-env }}
        shell: bash -l {0}
        run: python quickstart.py
